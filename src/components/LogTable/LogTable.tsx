import React, { useRef, useEffect } from 'react';
import { getTravelTimeEmoji } from '../../utils/helpers';
import styles from './LogTable.module.css';

export interface LogEntry {
  id: string;
  passengerId: string;
  from: number;
  to: number;
  travelTime: number; // –í—Ä–µ–º—è –≤ –ø—É—Ç–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  order: number;
  createdAt: number; // –ò—Å–ø–æ–ª—å–∑—É–µ–º createdAt –ø–∞—Å—Å–∞–∂–∏—Ä–∞
}

export interface LogTableProps {
  log: LogEntry[];
  averageTravelTime: number;
}

const LogTable: React.FC<LogTableProps> = ({ log, averageTravelTime }) => {
  const tbodyRef = useRef<HTMLDivElement>(null);

  // –ê–≤—Ç–æ—Å–∫—Ä–æ–ª–ª –∫ –ø–æ—Å–ª–µ–¥–Ω–∏–º –∑–∞–ø–∏—Å—è–º –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö
  useEffect(() => {
    const timer = setTimeout(() => {
      if (tbodyRef.current) {
        tbodyRef.current.scrollTop = tbodyRef.current.scrollHeight;
      }
    }, 100); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏

    return () => clearTimeout(timer);
  }, [log.length]); // –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π

  return (
    <div className={styles.logTableContainer}>
      <div className={styles.logStats}>
        <span>üìä –õ–æ–≥: {log.length} –∑–∞–ø–∏—Å–µ–π</span>
        {averageTravelTime > 0 && <span>‚è±Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: {averageTravelTime}—Å</span>}
      </div>
      <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—Ä–µ–≤–æ–∑–æ–∫</h3>
      <div className={styles.logTable}>
        <div className={styles.tableHeader}>
          <div className={styles.headerCell}>#</div>
          <div className={styles.headerCell}>ID</div>
          <div className={styles.headerCell}>–û—Ç–∫—É–¥–∞</div>
          <div className={styles.headerCell}>–ö—É–¥–∞</div>
          <div className={styles.headerCell}>–í—Ä–µ–º—è –≤ –ø—É—Ç–∏, c</div>
        </div>
        <div className={styles.tableBody} ref={tbodyRef}>
          {log.map((entry, index) => {
            const emoji = getTravelTimeEmoji(entry.travelTime);
            const isNewEntry = index === log.length - 1; // –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å - –Ω–æ–≤–∞—è

            return (
              <div
                key={`${entry.createdAt}-${entry.id}`}
                className={`${styles.tableRow} ${isNewEntry ? styles.newEntry : ''}`}
              >
                <div className={styles.tableCell}>{entry.order + 1}</div>
                <div className={styles.tableCell}>{entry.passengerId}</div>
                <div className={styles.tableCell}>{entry.from}</div>
                <div className={styles.tableCell}>{entry.to}</div>
                <div className={styles.tableCell}>
                  {entry.travelTime}—Å {emoji}
                </div>
              </div>
            );
          })}
        </div>
      </div>
    </div>
  );
};

export default LogTable;
